{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterbottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d14ada82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport styles from './Cards.module.css';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate}}) => {\nif(!confirmed){\nreturn 'loading...';\n}\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterbottom>Infected</Typography>\n                <Typography variant=\"h5\">\n                    <CountUp \n                    start = {0}\n                    end = {confirmed.value}\n                    duration = {2.5}\n                    separator = \",\"\n                    />\n                </Typography>\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                <Typography variant=\"body2\">Number of Active Cases of Covid 19 </Typography>\n            </CardContent>\n        </Grid>\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterbottom>Recoverd</Typography>\n                <Typography variant=\"h5\">\n                    <CountUp \n                    start = {0}\n                    end = {recovered.value}\n                    duration = {2.5}\n                    separator = \",\"\n                    />\n                </Typography>\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                <Typography variant=\"body2\">Number of Recoveries from Covid 19 </Typography>\n            </CardContent>\n        </Grid>\n        <Grid item component ={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterbottom>Deaths</Typography>\n                <Typography variant=\"h5\">\n                    <CountUp \n                    start = {0}\n                    end = {deaths.value}\n                    duration = {2.5}\n                    separator = \",\"\n                    />\n                </Typography>\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                <Typography variant=\"body2\">Number of Deaths caused by Covid 19 </Typography>\n            </CardContent>\n        </Grid>\n            </Grid>\n        </div>\n    )\n}\nexport default Cards;","import axios from 'axios';\nconst url = 'https://covid19.mathdro.id/api'\n\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`  \n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n    \n        return { confirmed, recovered, deaths, lastUpdate };\n      } catch (error) {\n        console.log(error)\n      }\n    };\n    export const fetchDailyData = async()=>{\n        try {\n            const data = await axios.get(`${url}/daily`)\n\n            const modifiedData = data.data.map((dailyData) => ({\n                confirmed: dailyData.confirmed.total,\n                deaths: dailyData.deaths.total,\n                date: dailyData.reportDate,\n            }));\n            return modifiedData\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    export const fetchCountries = async () => {\ntry {\n    const {data: { countries }} = await axios.get(`${url}/countries`)\n   return countries.map((country) => country.name)\n} catch (error) {\n    console.log(error)\n}\n    }","import React, {useState,useEffect} from 'react';\nimport {fetchDailyData} from '../../api'\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nconst Chart = ({ data: {confirmed, deaths, recovered}, country}) => {\n   const[dailyData, setDailyData] = useState({});\n   useEffect(() => {\n    const fetchAPI = async () => {\n    setDailyData (await fetchDailyData());\n    }\n\n    fetchAPI()\n   }, []);\n   const lineChart = (\n    dailyData.length\n    ?(\n    <Line \n    data={{\n       labels: dailyData.map(({date})=> date),\n       datasets: [{\n           data: dailyData.map(({confirmed})=> confirmed),\n           label: 'Infected',\n           borderColor: '#3333ff',\n           fill: true\n       }, {\n        data: dailyData.map(({deaths})=> deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n    }], \n    }}\n    />) :null\n   );\n   const barChart = (\n       confirmed \n       ?(\n           <Bar \n           data={{\n            labels: ['Infected', 'Recovered', 'Deaths'],\n            datasets: [\n                {\n                label: 'People',\n                backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255,0,0,0.5)'],\n                data:[confirmed.value, recovered.value, deaths.value]\n            }]\n           }}\n           options={{\n               legend: {display: false},\n               title:{display: true, text:`Current state in ${country}`},\n           }}\n           />\n       ):null\n   )\n    return(\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\nexport default Chart","import React, { useState, useEffect} from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\nimport styles from './CountryPicker.module.css'\nimport{ fetchCountries } from '../../api'\nconst CountryPicker = ({ handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\nuseEffect(() => {\n    const fetchAPI = async () => {\n    setFetchedCountries(await fetchCountries());\n}\nfetchAPI()\n},[setFetchedCountries])\n\n    return(\n        <FormControl className={styles.FormControl}>\n        <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n              {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option> )}\n        </NativeSelect>  \n        </FormControl>\n    )\n}\nexport default CountryPicker","import React from 'react'\n// import Cards from './components/Cards/Cards';\n// import Chart from './components/Chart/Chart';\n// import CountryPicker from './components/CountryPicker/CountryPicker';\n\nimport{Cards, Chart, CountryPicker} from './components'\nimport styles from './App.module.css'\nimport{ fetchData } from './api';\nimport coronaImage from './images/image.png'\nclass App extends React.Component {\nstate = {\n  data: {},\n  country: '',\n}\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData })\n  }\nhandleCountryChange = async (country) => {\nconst fetchedData = await fetchData(country)\nthis.setState({ data: fetchedData, country:country })\nconsole.log(fetchedData)\n\n}\n  render() {\nconst {data, country} = this.state;\n\n    return(\n      <div className={styles.container}>\n        <img className={styles.image}src={coronaImage} alt=\"COVID-19\"/>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country}/>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n   <App />,document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}